apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: delivery
spec:
  replicas: 1
  template:
    metadata:
      labels:
        run: delivery
        app: delivery
    spec:
      containers:
      - name: delivery
        image: dronedelivery.azurecr.io/fabrikam.dronedelivery.deliveryservice
        env:
        - name: DOCDB_KEY
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: CosmosDB_Key
        - name: DOCDB_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: CosmosDB_Endpoint
        - name: DOCDB_DATABASEID
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: CosmosDB_DatabaseId
        - name: DOCDB_COLLECTIONID
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: CosmosDB_CollectionId
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: http_proxy
          value: $(NODE_NAME):414
        - name: CORRELATION_HEADER
          value: l5d-ctx-trace
        - name: REDIS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: Redis_HostName
        - name: REDIS_PRIMARYKEY
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: Redis_PrimaryKey
        - name: REDIS_SECONDARYKEY
          valueFrom:
            secretKeyRef:
              name: dd-delivery-storeconf
              key: Redis_SecondaryKey
        - name: REDIS_SSLPORT
          value: "6380"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_SSL
          value: "false"
        - name: EH_CONNSTR
          value: "na"
        - name: EH_ENTITYPATH
          value: "na"
        ports:
          - containerPort: 80
